{"ast":null,"code":"import _objectSpread from\"C:/Users/shaik/OneDrive/Pictures/Documents/Desktop/user-dashboard/user-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{userService}from'../api/userService';import{jsx as _jsx}from\"react/jsx-runtime\";const UserContext=/*#__PURE__*/createContext();export const useUsers=()=>{const context=useContext(UserContext);if(!context){throw new Error('useUsers must be used within a UserProvider');}return context;};export const UserProvider=_ref=>{let{children}=_ref;const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{fetchUsers();},[]);const fetchUsers=async()=>{try{setLoading(true);const userData=await userService.getAllUsers();setUsers(userData);setError(null);}catch(err){setError('Failed to fetch users');console.error('Error fetching users:',err);}finally{setLoading(false);}};const addUser=newUser=>{const userWithId=_objectSpread(_objectSpread({},newUser),{},{id:Math.max(...users.map(u=>u.id))+1});setUsers(prev=>[userWithId,...prev]);};const getUserById=id=>{return users.find(user=>user.id===parseInt(id));};const value={users,loading,error,addUser,getUserById,refreshUsers:fetchUsers};return/*#__PURE__*/_jsx(UserContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","userService","jsx","_jsx","UserContext","useUsers","context","Error","UserProvider","_ref","children","users","setUsers","loading","setLoading","error","setError","fetchUsers","userData","getAllUsers","err","console","addUser","newUser","userWithId","_objectSpread","id","Math","max","map","u","prev","getUserById","find","user","parseInt","value","refreshUsers","Provider"],"sources":["C:/Users/shaik/OneDrive/Pictures/Documents/Desktop/user-dashboard/user-dashboard/src/context/UserContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { userService } from '../api/userService';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const useUsers = () => {\r\n  const context = useContext(UserContext);\r\n  if (!context) {\r\n    throw new Error('useUsers must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const userData = await userService.getAllUsers();\r\n      setUsers(userData);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to fetch users');\r\n      console.error('Error fetching users:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addUser = (newUser) => {\r\n    const userWithId = {\r\n      ...newUser,\r\n      id: Math.max(...users.map(u => u.id)) + 1,\r\n    };\r\n    setUsers(prev => [userWithId, ...prev]);\r\n  };\r\n\r\n  const getUserById = (id) => {\r\n    return users.find(user => user.id === parseInt(id));\r\n  };\r\n\r\n  const value = {\r\n    users,\r\n    loading,\r\n    error,\r\n    addUser,\r\n    getUserById,\r\n    refreshUsers: fetchUsers\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};"],"mappings":"qKAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,WAAW,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAQ,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACM,WAAW,CAAC,CACvC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACdiB,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACFH,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAjB,WAAW,CAACkB,WAAW,CAAC,CAAC,CAChDP,QAAQ,CAACM,QAAQ,CAAC,CAClBF,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAE,MAAOI,GAAG,CAAE,CACZJ,QAAQ,CAAC,uBAAuB,CAAC,CACjCK,OAAO,CAACN,KAAK,CAAC,uBAAuB,CAAEK,GAAG,CAAC,CAC7C,CAAC,OAAS,CACRN,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAQ,OAAO,CAAIC,OAAO,EAAK,CAC3B,KAAM,CAAAC,UAAU,CAAAC,aAAA,CAAAA,aAAA,IACXF,OAAO,MACVG,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,GAAGjB,KAAK,CAACkB,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACJ,EAAE,CAAC,CAAC,CAAG,CAAC,EAC1C,CACDd,QAAQ,CAACmB,IAAI,EAAI,CAACP,UAAU,CAAE,GAAGO,IAAI,CAAC,CAAC,CACzC,CAAC,CAED,KAAM,CAAAC,WAAW,CAAIN,EAAE,EAAK,CAC1B,MAAO,CAAAf,KAAK,CAACsB,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACR,EAAE,GAAKS,QAAQ,CAACT,EAAE,CAAC,CAAC,CACrD,CAAC,CAED,KAAM,CAAAU,KAAK,CAAG,CACZzB,KAAK,CACLE,OAAO,CACPE,KAAK,CACLO,OAAO,CACPU,WAAW,CACXK,YAAY,CAAEpB,UAChB,CAAC,CAED,mBACEd,IAAA,CAACC,WAAW,CAACkC,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAA1B,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}